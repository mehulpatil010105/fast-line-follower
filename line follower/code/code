#include <QTRSensors.h>

// QTR-8RC using analog pins A0 to A7
QTRSensorsAnalog qtr((unsigned char[]){A0, A1, A2, A3, A4, A5, A6, A7}, 8);
unsigned int sensorValues[8];

// TB6612FNG Motor Driver Pins
const int AIN1 = 2;
const int AIN2 = 3;
const int PWMA = 9;

const int BIN1 = 4;
const int BIN2 = 5;
const int PWMB = 10;

// PID constants
float Kp = 0.5;
float Ki = 0.0;
float Kd = 0.3;

// Control variables
int baseSpeed = 150;
int maxSpeed = 255;
int position = 0;
int lastError = 0;
float error, P, I, D, PIDvalue;

void setup() {
  Serial.begin(9600);

  pinMode(AIN1, OUTPUT);
  pinMode(AIN2, OUTPUT);
  pinMode(PWMA, OUTPUT);

  pinMode(BIN1, OUTPUT);
  pinMode(BIN2, OUTPUT);
  pinMode(PWMB, OUTPUT);

  // Calibrate QTR sensors
  delay(1000);
  for (int i = 0; i < 200; i++) {
    qtr.calibrate();
    delay(20);
  }
}

void loop() {
  position = qtr.readLine(sensorValues); // Range: 0 to 7000 for 8 sensors
  error = position - 3500;

  P = error;
  I = I + error;
  D = error - lastError;

  PIDvalue = (Kp * P) + (Ki * I) + (Kd * D);
  lastError = error;

  int leftSpeed = baseSpeed + PIDvalue;
  int rightSpeed = baseSpeed - PIDvalue;

  leftSpeed = constrain(leftSpeed, 0, maxSpeed);
  rightSpeed = constrain(rightSpeed, 0, maxSpeed);

  driveMotor(leftSpeed, rightSpeed);
}

void driveMotor(int left, int right) {
  // Left Motor (Motor B)
  if (left >= 0) {
    digitalWrite(BIN1, HIGH);
    digitalWrite(BIN2, LOW);
  } else {
    digitalWrite(BIN1, LOW);
    digitalWrite(BIN2, HIGH);
    left = -left;
  }
  analogWrite(PWMB, constrain(left, 0, 255));

  // Right Motor (Motor A)
  if (right >= 0) {
    digitalWrite(AIN1, HIGH);
    digitalWrite(AIN2, LOW);
  } else {
    digitalWrite(AIN1, LOW);
    digitalWrite(AIN2, HIGH);
    right = -right;
  }
  analogWrite(PWMA, constrain(right, 0, 255));
}
